{"ast":null,"code":"var _jsxFileName = \"/Users/soumitabasu/Documents/Cinera-Website/my-app/src/components/carousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { API_KEY } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCarousel = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [videoKey, setVideoKey] = useState(null);\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`).then(res => {\n      setMovies(res.data.results);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedMovie) {\n      axios.get(`https://api.themoviedb.org/3/movie/${selectedMovie.id}/videos?api_key=${API_KEY}&language=en-US`).then(res => {\n        setVideoKey(res.data.results[0].key);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [selectedMovie]);\n  const handleClick = movie => {\n    setSelectedMovie(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Carousel, {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"d-block w-100\",\n          src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n          alt: movie.title,\n          onClick: () => handleClick(movie)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Carousel.Caption, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedMovie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: `https://www.youtube.com/embed/${videoKey}`,\n        title: selectedMovie.title,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCarousel, \"GEmVQ5iEfU309rtULcIdSjBg2lg=\");\n_c = MovieCarousel;\nexport default MovieCarousel;\nvar _c;\n$RefreshReg$(_c, \"MovieCarousel\");","map":{"version":3,"names":["React","useState","useEffect","axios","Carousel","API_KEY","MovieCarousel","movies","setMovies","selectedMovie","setSelectedMovie","videoKey","setVideoKey","get","then","res","data","results","catch","err","console","log","id","key","handleClick","movie","map","poster_path","title"],"sources":["/Users/soumitabasu/Documents/Cinera-Website/my-app/src/components/carousel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Carousel from 'react-bootstrap/Carousel';\n\nimport { API_KEY } from '../utils/constants';\n\nconst MovieCarousel = () => {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [videoKey, setVideoKey] = useState(null);\n\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`)\n      .then(res => {\n        setMovies(res.data.results);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (selectedMovie) {\n      axios.get(`https://api.themoviedb.org/3/movie/${selectedMovie.id}/videos?api_key=${API_KEY}&language=en-US`)\n        .then(res => {\n          setVideoKey(res.data.results[0].key);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }, [selectedMovie]);\n\n  const handleClick = (movie) => {\n    setSelectedMovie(movie);\n  }\n\n  return (\n    <div>\n      <Carousel>\n        {movies.map(movie => (\n          <Carousel.Item key={movie.id}>\n            <img\n              className=\"d-block w-100\"\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n              onClick={() => handleClick(movie)}\n            />\n            <Carousel.Caption>\n              <h3>{movie.title}</h3>\n            </Carousel.Caption>\n          </Carousel.Item>\n        ))}\n      </Carousel>\n      {selectedMovie && (\n        <div>\n          <h2>{selectedMovie.title}</h2>\n          <iframe src={`https://www.youtube.com/embed/${videoKey}`} title={selectedMovie.title} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieCarousel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,0BAA0B;AAE/C,SAASC,OAAO,QAAQ,oBAAoB;AAAC;AAE7C,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACU,GAAG,CAAE,uDAAsDR,OAAQ,wFAAuF,CAAC,CAC9JS,IAAI,CAACC,GAAG,IAAI;MACXP,SAAS,CAACO,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd,IAAIO,aAAa,EAAE;MACjBN,KAAK,CAACU,GAAG,CAAE,sCAAqCJ,aAAa,CAACa,EAAG,mBAAkBjB,OAAQ,iBAAgB,CAAC,CACzGS,IAAI,CAACC,GAAG,IAAI;QACXH,WAAW,CAACG,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACM,GAAG,CAAC;MACtC,CAAC,CAAC,CACDL,KAAK,CAACC,GAAG,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACV,aAAa,CAAC,CAAC;EAEnB,MAAMe,WAAW,GAAIC,KAAK,IAAK;IAC7Bf,gBAAgB,CAACe,KAAK,CAAC;EACzB,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,QAAQ;MAAA,UACNlB,MAAM,CAACmB,GAAG,CAACD,KAAK,iBACf,QAAC,QAAQ,CAAC,IAAI;QAAA,wBACZ;UACE,SAAS,EAAC,eAAe;UACzB,GAAG,EAAG,mCAAkCA,KAAK,CAACE,WAAY,EAAE;UAC5D,GAAG,EAAEF,KAAK,CAACG,KAAM;UACjB,OAAO,EAAE,MAAMJ,WAAW,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAClC,eACF,QAAC,QAAQ,CAAC,OAAO;UAAA,uBACf;YAAA,UAAKA,KAAK,CAACG;UAAK;YAAA;YAAA;YAAA;UAAA;QAAM;UAAA;UAAA;UAAA;QAAA,QACL;MAAA,GATDH,KAAK,CAACH,EAAE;QAAA;QAAA;QAAA;MAAA,QAW7B;IAAC;MAAA;MAAA;MAAA;IAAA,QACO,EACVb,aAAa,iBACZ;MAAA,wBACE;QAAA,UAAKA,aAAa,CAACmB;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eAC9B;QAAQ,GAAG,EAAG,iCAAgCjB,QAAS,EAAE;QAAC,KAAK,EAAEF,aAAa,CAACmB,KAAM;QAAC,WAAW,EAAC,GAAG;QAAC,KAAK,EAAC,yEAAyE;QAAC,eAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAE3M;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAA,GAxDKtB,aAAa;AAAA,KAAbA,aAAa;AA0DnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}