{"ast":null,"code":"var _jsxFileName = \"/Users/soumitabasu/Documents/Cinera-Website/my-app/src/pages/Homepage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchMovies, getGenres } from \"../store\";\nimport Navbar from \"../components/navbar\";\nimport Trending from \"../components/trending\";\nimport Slider from \"../components/slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  const [isScrolled, setIsScrolled] = useState(false);\n  // const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const movies = useSelector(state => state.cinera.movies);\n  const genres = useSelector(state => state.cinera.genres);\n  const genresLoaded = useSelector(state => state.cinera.genresLoaded);\n  useEffect(() => {\n    dispatch(getGenres());\n  }, []);\n  useEffect(() => {\n    if (genresLoaded) dispatch(fetchMovies({\n      genres,\n      type: \"all\"\n    }));\n  }, [genresLoaded]);\n  window.onscroll = () => {\n    setIsScrolled(window.pageYOffset === 0 ? false : true);\n    return () => window.onscroll = null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isScrolled: isScrolled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Trending, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      movie: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Homepage, \"ilkcib6aZXeM1incyhX+Go3Fjuw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchMovies","getGenres","Navbar","Trending","Slider","Homepage","isScrolled","setIsScrolled","dispatch","movies","state","cinera","genres","genresLoaded","type","window","onscroll","pageYOffset"],"sources":["/Users/soumitabasu/Documents/Cinera-Website/my-app/src/pages/Homepage.jsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchMovies, getGenres } from \"../store\";\nimport Navbar from \"../components/navbar\";\nimport Trending from \"../components/trending\";\nimport Slider from \"../components/slider\";\n\nconst Homepage = () => {\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  // const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const movies = useSelector((state) => state.cinera.movies);\n  const genres = useSelector((state) => state.cinera.genres);\n  const genresLoaded = useSelector((state) => state.cinera.genresLoaded);\n  \n  useEffect(() => {\n  dispatch(getGenres());\n}, []);\n\nuseEffect(() => {\n  if(genresLoaded)\n  dispatch(fetchMovies({genres, type: \"all\"}));\n}, [genresLoaded]);\n\n  window.onscroll = () => {\n    setIsScrolled(window.pageYOffset===0 ? false : true);\n    return () => (window.onscroll = null);\n  };\n\n  return (\n    <div>\n      <Navbar isScrolled={isScrolled}/>\n      <Trending/>\n      <Slider movie={movies}/>\n    </div>\n  );\n};\n\nexport default Homepage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AACA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,SAAS,QAAQ,UAAU;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AAAC;AAE1C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAErB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD;EACA,MAAMW,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,MAAM,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACF,MAAM,CAAC;EAC1D,MAAMG,MAAM,GAAGb,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACC,MAAM,CAAC;EAC1D,MAAMC,YAAY,GAAGd,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACE,YAAY,CAAC;EAEtEjB,SAAS,CAAC,MAAM;IAChBY,QAAQ,CAACP,SAAS,EAAE,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAENL,SAAS,CAAC,MAAM;IACd,IAAGiB,YAAY,EACfL,QAAQ,CAACR,WAAW,CAAC;MAACY,MAAM;MAAEE,IAAI,EAAE;IAAK,CAAC,CAAC,CAAC;EAC9C,CAAC,EAAE,CAACD,YAAY,CAAC,CAAC;EAEhBE,MAAM,CAACC,QAAQ,GAAG,MAAM;IACtBT,aAAa,CAACQ,MAAM,CAACE,WAAW,KAAG,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;IACpD,OAAO,MAAOF,MAAM,CAACC,QAAQ,GAAG,IAAK;EACvC,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,UAAU,EAAEV;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eACjC,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eACX,QAAC,MAAM;MAAC,KAAK,EAAEG;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAEV,CAAC;AAAC,GA9BIJ,QAAQ;EAAA,QAIKP,WAAW,EACbC,WAAW,EACXA,WAAW,EACLA,WAAW;AAAA;AAAA,KAP5BM,QAAQ;AAgCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}